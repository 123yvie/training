{"name": "case1", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_payment_overview.TestPaymentOverview object at 0x00000232E2F8B610>\ncase_data = {'data_url': '/data/test_overview_list.csv', 'name': 'case1', 'request': {'data': 'None', 'json': {'pageNumber': 1, 'p...eys': [], ...}, 'method': 'post', 'url': '/ptapi/overview/list'}, 'validate': {'code': 0, 'msg': 'success', 'time': 0}}\ninit_fixture = 'eyJhbGciOiJIUzUxMiJ9.eyJERVZJQ0UiOiJQQyIsIlBFUlNPTl9DT0RFIjoiYmluZ2JhIiwiVElNRSI6MTY5MDk1NDgwOTU2NCwiZXhwIjoxNjkxMDQxMjA5fQ.otrsqRHUiU6Zra4Y1CLrVKI_HiqlvZtMR2BbzDpd8WF42GAfXfFUBBIU8gO1i8pD4cju5doCqogyrhJyDupCdw'\n\n    @allure.story('test_overview_list接口')\n    @pytest.mark.parametrize(\"case_data\", render_yaml(os.path.join(BASE_PATH, \"payment\", 'test_overview_list.yaml')))     #把yaml文件的参数赋值给case_data\n    # @allure.title(case_data)\n    def test_overview_list(self, case_data, init_fixture):\n        # 设置用例名称\n        allure.dynamic.title(case_data['name'])\n        step_1()\n        result = client_util.send_request(case_data, token=init_fixture)\n>       assertions.run(result, case_data['validate'])\n\ntestcase\\api_test\\payment\\test_payment_overview.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncore\\assert_handler.py:78: in run\n    self.assert_code(int(code), value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <core.assert_handler.AssertHandler object at 0x00000232E2CE5BA0>, code = 401, expected_code = 0\n\n    def assert_code(self, code, expected_code):\n        try:\n>           assert code == expected_code\nE           AssertionError\n\ncore\\assert_handler.py:19: AssertionError"}, "steps": [{"name": "步骤1 ==>> 获取sicco-概览信息", "status": "passed", "start": 1690957131087, "stop": 1690957131087}], "attachments": [{"name": "log", "source": "d3b07126-609d-430c-ba67-ad2b4e527b57-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "case_data", "value": "{'name': 'case1', 'data_url': '/data/test_overview_list.csv', 'request': {'method': 'post', 'url': '/ptapi/overview/list', 'json': {'pageNumber': 1, 'pageSize': 10, 'payoutRound': 'RT_AFC_2022_Sep_01', 'selectedRowKeys': [], 'selectedRows': [], 'status': 'all', 'userId': '3fbe861b6b6841f2b29bc12a2fd7124d', 'year': 2022}, 'data': 'None'}, 'validate': {'code': 0, 'time': 0, 'msg': 'success'}}"}], "start": 1690957131087, "stop": 1690957131316, "uuid": "6ea19810-699c-4fe5-83aa-b1306a0b22c3", "historyId": "971e5d93bb6cfa5c28721f013289acf1", "testCaseId": "3b2e613f30f999a7e591a4d55162de9e", "fullName": "testcase.api_test.payment.test_payment_overview.TestPaymentOverview#test_overview_list", "labels": [{"name": "story", "value": "test_overview_list接口"}, {"name": "feature", "value": "F&L Payment Management - RT 模块"}, {"name": "epic", "value": "Payment"}, {"name": "tag", "value": "@pytest.mark.usefixtures('init_fixture')"}, {"name": "parentSuite", "value": "testcase.api_test.payment"}, {"name": "suite", "value": "test_payment_overview"}, {"name": "subSuite", "value": "TestPaymentOverview"}, {"name": "host", "value": "LCN06240109"}, {"name": "thread", "value": "33416-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.api_test.payment.test_payment_overview"}]}